version: "3.8"

networks:
  app-network:
    driver: bridge

services:
  php:
    container_name: php_${APP_NAME}
    restart: always
    profiles:
      - local
    user: "${USER}:${GROUP}"
    build:
      context: docker/php
      args:
        PHP_INI_NAME: ${DOCKER_PHP_INI:-php.ini}
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      DB_PORT: ${DB_PORT:-3306}
      DB_HOST: ${DB_HOST}
    networks:
      - app-network

  supervisor:
    container_name: supervisor_${APP_NAME}
    restart: always
    profiles:
      - local
    user: "${USER}:${GROUP}"
    build:
      context: docker/supervisor
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      DB_PORT: ${DB_PORT:-3306}
      DB_HOST: ${DB_HOST}
    networks:
      - app-network
      
  nginx:
    container_name: nginx_${APP_NAME}
    restart: always
    profiles:
      - local
    build: 
      context: docker/nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./:/var/www:cached
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      - php
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis_${APP_NAME}
    restart: always
    profiles:
      - local
    ports:
      - ${REDIS_PORT:-6379}:6379
    networks:
      - app-network

  redisinsight:
    container_name: redisinsight_${APP_NAME}
    image: redislabs/redisinsight:latest
    restart: always
    profiles:
      - local
    ports:
      - 8001:8001
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq_${APP_NAME}
    restart: always
    profiles:
      - local
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - app-network

  mysql:
    image: mysql:latest
    container_name: mysql_${APP_NAME}
    profiles:
      - local
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: "%"
    ports:
      - 3306:3306
    volumes:
      - ./docker/mysql/run:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin_${APP_NAME}
    restart: always
    profiles:
      - local
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - 8081:80
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:8.11.1
    profiles:
      - local
      - discovery.type=single-node
    container_name: elasticsearch_${APP_NAME}
    restart: always
    environment:
       - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
       - xpack.security.enabled=false
       - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
        - ./docker/elasticsearch/run:/usr/share/elasticsearch/data
    networks:
      - app-network

  postgres:
    image: postgres:14-alpine
    container_name: postgres_${APP_NAME}
    restart: always
    profiles:
      - local
    ports:
      - 5432:5432
    volumes:
      - ./docker/postgres/run:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_DB=${DB_DATABASE}
    networks:
      - app-network
